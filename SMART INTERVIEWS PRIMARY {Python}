1.Sum of Array Elements
# Enter your code here. Read input from STDIN. Print output to STDOUT
u=int(input())
for i in range(u):
    y=int(input())
    yy=list(map(int,input().split()))
    print(sum(yy))

2.Print Right Angled Triangle Pattern
# Enter your code here. Read input from STDIN. Print output to STDOUT
def rightTriangle(n):
    for i in range(n+1):
        for j in range(1,n-i+1):
            print(" ", end="")
        for j in range(n-i+1,n+1):
            print("*", end="")
        print()

t= int(input())
for i in range(t):
    print("Case #"+ str(i+1) + ":",end="")
    n=int(input())
    rightTriangle(n)

3.Print Hollow Diamond Pattern
import math

def hollow(n):
    j=1
    for i in range((math.ceil(n/2))+1,1,-1):
        if i==(math.ceil(n/2)+1):
            print((i-2)*' '+str('*'))
        else:
            print((i-2)*' '+str('*')+j*' '+str('*'))
            j+=2

    for j in range(1,math.ceil(n/2),1):
        if j==1:
            k=((math.floor(n/2)*2)-((2*j)+1))
            if k==-1:
                print(j*' '+str('*'))
            else:
                print(j*' '+str('*')+k*' '+str('*'))
            k-=2
        elif (j==math.ceil(n/2)-1):
            print(j*' '+str('*'))
        else:
            print(j*' '+str('*')+k*' '+str('*'))
            k-=2

for i in range(int(input())):
    b=int(input())
    print("Case #"+str(i+1)+':')
    hollow(b)

4.Reverse Bits
# Enter your code here. Read input from STDIN. Print output to STDOUT
def rv(n,size):
    binn=bin(n)
    ar=binn[-1:1:-1]
    ar=ar+(size-len(ar))*"0"
    print(int(ar,2))

bb=int(input())
size=32
for i in range(bb):
    n=int(input())
    rv(n,size)

5.Pair with Difference K
for i in range(int(input())):
    m,n=map(int,input().split())
    dd=set(map(int,input().split()))
    c=0
    for i in dd:
            if n+i in dd:
                c=c+1
    if c>0:
        print("true")
    else:
        print("false")

6.Triple Trouble
for i in range(int(input())):
    v=int(input())
    lst=list(map(int,input().split()))
    d=sum(lst)
    v=[*set(lst)]
    g=sum(v)
    z=d-g
    zz=z//2
    print(g-zz)

7.Rearrange Sequence 1
# Enter your code here. Read input from STDIN. Print output to STDOUT
for i in range(int(input())):
    v=input()
    ff=list(map(int,input().split()))
    ans=0
    for i in range(len(ff)):
        maxx,minn=ff[i],ff[i]
        for j in range(i,len(ff)):
            maxx=max(maxx,ff[j])
            minn=min(minn,ff[j])
            if (j-i+1==maxx-minn+1):
                ans=max(ans,j-i+1)
    print(ans)


8.Rearrange Sequence 2
# Enter your code here. Read input from STDIN. Print output to STDOUT
for i in range(int(input())):
    v=int(input())
    ff=list(map(int,input().split()))
    ans=0
    for i in range(len(ff)):
        c=set()
        minn,maxx=ff[i],ff[i]
        for j in range(i,len(ff)):
            c.add(ff[j])
            maxx=max(maxx,ff[j])
            minn=min(minn,ff[j])
            if maxx-minn+1==len(c):
                ans=max(ans,maxx-minn+1)
    print(ans)


9.Rearrange Sequence 3
# Enter your code here. Read input from STDIN. Print output to STDOUT
for i in range(int(input())):
    vv=int(input())
    ff=list(map(int,input().split()))
    ans=0
    for i in range(len(ff)):
        c=set()
        maxx,minn=ff[i],ff[i]
        for j in range(i,len(ff)):
            c.add(ff[j])
            maxx=max(maxx,ff[j])
            minn=min(minn,ff[j])
            if maxx-minn+1==len(c):
                ans=max(ans,maxx-minn+1)
    print(ans+1)

10.Distinct Elements in Window
# Enter your code here. Read input from STDIN. Print output to STDOUT
for i in range(int(input())):
    vv,k=map(int,input().split())
    ff=list(map(int,input().split()))
    hashmap={}
    for i in range(k):
        if ff[i] in hashmap:
            hashmap[ff[i]]+=1
        else:
            hashmap[ff[i]]=1
    print(len(hashmap),end=" ")

    for i in range(k,vv):
        if ff[i] in hashmap:
            hashmap[ff[i]]+=1
        else:
            hashmap[ff[i]]=1
        hashmap[ff[i-k]]-=1
        if hashmap[ff[i-k]]==0:
            del(hashmap[ff[i-k]])
        print(len(hashmap),end=" ")
    print("\n")

11.



